डिजिटल परिपथ के संदर्भ में उन परिपथों को संयोजन तर्क कहते हैं जिनका आउटपुट केवल उनके वर्तमान इनपुटों पर ही निर्भर करता है, उनके पूर्व अवस्थाओं पर नहीं। ऐण्ड गेट और ऑर गेट सरल संयोजन तर्क के दो सरल उदाहरण हैं। इसके विपरीत अनुक्रमिक लॉजिक का आउटपुट उसके वर्तमान इनपुट पर निर्भर होने के साथ-साथ उसके इनपुट की पूर्व अवस्थाओं पर भी निर्भर होता है। 
कुछ प्रमुख संयोजन तर्क :

कम्बिनेशनल लॉजिक का न्यूनीकरण और सरलीकरण नीचे दिये दिये गये सूत्रों का उपयोग करके किया जा सकता है। तर्क फलनों का न्यूनीकरण करने से फलन सरल बन जाते हैं और उनको बनाना आसान हो जाता है। परिपथ का आकार छोटा हो जाता है। परिपथ कुछ तेज गति वाला भी बन जाता है क्योंकि कम गेटों के उपयोग से देरी भी कम होती है।
